diff --git a/src/plugins/plugin.js b/src/plugins/plugin.js
index c67882a02816092f7df440ec571a9899996fb28d..f07d0e37933533b047dc8e24039b5d5b079fbfaf 100644
--- a/src/plugins/plugin.js
+++ b/src/plugins/plugin.js
@@ -61,15 +61,26 @@ const createNodes = [
         };
     }
 ];
+const remixViteImportPattern = /import\s+.*\s+from\s+['"]@remix-run\/dev['"]/s;
 async function buildViteTargets(configFilePath, projectRoot, options, context) {
     const absoluteConfigFilePath = (0, _devkit.joinPathFragments)(context.workspaceRoot, configFilePath);
+    if ((0, _fs.existsSync)(absoluteConfigFilePath)) {
+        const fileContent = (0, _fs.readFileSync)(absoluteConfigFilePath, 'utf-8');
+
+        // If the config file imports from '@remix-run/dev', we skip creating targets
+        // as it should be handled by the @nx/remix plugin
+        if (remixViteImportPattern.test(fileContent)) {
+            return {};
+        }
+    }
+
     // Workaround for the `build$3 is not a function` error that we sometimes see in agents.
     // This should be removed later once we address the issue properly
     try {
         const importEsbuild = ()=>new Function('return import("esbuild")')();
         await importEsbuild();
     } catch (e) {
-    // do nothing
+        // do nothing
     }
     const { resolveConfig } = await (0, _executorutils.loadViteDynamicImport)();
     const viteConfig = await resolveConfig({
