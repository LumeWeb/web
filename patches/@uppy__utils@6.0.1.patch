diff --git a/lib/UppyFile.d.ts b/lib/UppyFile.d.ts
index 763ae3db9aa42a17afdde7da8632e0fa54ba80b5..5077f9d49905cb87ff682e377f8b14ba3e723abb 100644
--- a/lib/UppyFile.d.ts
+++ b/lib/UppyFile.d.ts
@@ -1,4 +1,4 @@
-import type { FileProgress } from './FileProgress.js';
+import type { FileProgress } from './FileProgress.ts';
 export type Meta = Record<string, unknown>;
 export type Body = Record<string, unknown>;
 export type InternalMetadata = {
@@ -16,6 +16,7 @@ export interface UppyFile<M extends Meta, B extends Body> {
     isGhost: boolean;
     meta: InternalMetadata & M;
     name?: string;
+    plugins?: string[];
     preview?: string;
     progress: FileProgress;
     missingRequiredMetaFields?: string[];
diff --git a/lib/UppyFile.d.ts.map b/lib/UppyFile.d.ts.map
index d679d89afcbdb3d8dc74256000a7aa5e2a43a652..a3b23b18f8d29ea47eac665df1f1f0ab5c1c6b30 100644
--- a/lib/UppyFile.d.ts.map
+++ b/lib/UppyFile.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"UppyFile.d.ts","sourceRoot":"","sources":["../src/UppyFile.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"UppyFile.d.ts","sourceRoot":"","sources":["../src/UppyFile.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/lib/UppyFile.js.map b/lib/UppyFile.js.map
index d9a5b2655d6825db074a8daace37811cf38ef736..a7ba2e309486430c2079144f188e3be57f7d5301 100644
--- a/lib/UppyFile.js.map
+++ b/lib/UppyFile.js.map
@@ -1 +1 @@
-{"version":3,"names":[],"sources":["UppyFile.ts"],"sourcesContent":["import type { FileProgress } from './FileProgress.js'\n\nexport type Meta = Record<string, unknown>\n\nexport type Body = Record<string, unknown>\n\nexport type InternalMetadata = { name: string; type?: string }\n\nexport interface UppyFile<M extends Meta, B extends Body> {\n  data: Blob | File\n  error?: string | null\n  extension: string\n  id: string\n  isPaused?: boolean\n  isRestored?: boolean\n  isRemote: boolean\n  isGhost: boolean\n  meta: InternalMetadata & M\n  name?: string\n  preview?: string\n  progress: FileProgress\n  missingRequiredMetaFields?: string[]\n  remote?: {\n    body?: Record<string, unknown>\n    companionUrl: string\n    host?: string\n    provider?: string\n    providerName?: string\n    requestClientId: string\n    url: string\n  }\n  serverToken?: string | null\n  size: number | null\n  source?: string\n  type: string\n  uploadURL?: string\n  response?: {\n    body?: B\n    status: number\n    bytesUploaded?: number\n    uploadURL?: string\n  }\n}\n\n/*\n * The user facing type for UppyFile used in uppy.addFile() and uppy.setOptions()\n */\nexport type MinimalRequiredUppyFile<M extends Meta, B extends Body> = Required<\n  Pick<UppyFile<M, B>, 'name'>\n> &\n  Partial<\n    Omit<UppyFile<M, B>, 'name' | 'data' | 'meta'>\n    // We want to omit the 'meta' from UppyFile because of internal metadata\n    // (see InternalMetadata in `UppyFile.ts`), as when adding a new file\n    // that is not required.\n  > & { meta?: M; data: { size: number | null } }\n\n/*\n * We are not entirely sure what a \"tag file\" is.\n * It is used as an intermidiate type between `CompanionFile` and `UppyFile`\n * in `@uppy/provider-views` and `@uppy/url`.\n * TODO: remove this in favor of UppyFile\n */\nexport type TagFile<M extends Meta> = {\n  id?: string\n  source: string\n  name: string\n  type: string\n  isRemote: boolean\n  preview?: string\n  data: {\n    size: number | null\n  }\n  body?: {\n    url?: string\n    fileId?: string\n  }\n  meta?: {\n    authorName?: string\n    authorUrl?: string\n    relativePath?: string | null\n    absolutePath?: string\n  } & M\n  remote: {\n    companionUrl: string\n    url: string\n    body: {\n      fileId: string\n      url?: string\n    }\n    providerName?: string\n    provider?: string\n    requestClientId: string\n  }\n}\n"],"mappings":"","ignoreList":[]}
\ No newline at end of file
+{"version":3,"names":[],"sources":["UppyFile.ts"],"sourcesContent":["import type { FileProgress } from './FileProgress.ts'\n\nexport type Meta = Record<string, unknown>\n\nexport type Body = Record<string, unknown>\n\nexport type InternalMetadata = { name: string; type?: string }\n\nexport interface UppyFile<M extends Meta, B extends Body> {\n  data: Blob | File\n  error?: string | null\n  extension: string\n  id: string\n  isPaused?: boolean\n  isRestored?: boolean\n  isRemote: boolean\n  isGhost: boolean\n  meta: InternalMetadata & M\n  name?: string\n  plugins?: string[]\n  preview?: string\n  progress: FileProgress\n  missingRequiredMetaFields?: string[]\n  remote?: {\n    body?: Record<string, unknown>\n    companionUrl: string\n    host?: string\n    provider?: string\n    providerName?: string\n    requestClientId: string\n    url: string\n  }\n  serverToken?: string | null\n  size: number | null\n  source?: string\n  type: string\n  uploadURL?: string\n  response?: {\n    body?: B\n    status: number\n    bytesUploaded?: number\n    uploadURL?: string\n  }\n}\n\n/*\n * The user facing type for UppyFile used in uppy.addFile() and uppy.setOptions()\n */\nexport type MinimalRequiredUppyFile<M extends Meta, B extends Body> = Required<\n  Pick<UppyFile<M, B>, 'name'>\n> &\n  Partial<\n    Omit<UppyFile<M, B>, 'name' | 'data' | 'meta'>\n    // We want to omit the 'meta' from UppyFile because of internal metadata\n    // (see InternalMetadata in `UppyFile.ts`), as when adding a new file\n    // that is not required.\n  > & { meta?: M; data: { size: number | null } }\n\n/*\n * We are not entirely sure what a \"tag file\" is.\n * It is used as an intermidiate type between `CompanionFile` and `UppyFile`\n * in `@uppy/provider-views` and `@uppy/url`.\n * TODO: remove this in favor of UppyFile\n */\nexport type TagFile<M extends Meta> = {\n  id?: string\n  source: string\n  name: string\n  type: string\n  isRemote: boolean\n  preview?: string\n  data: {\n    size: number | null\n  }\n  body?: {\n    url?: string\n    fileId?: string\n  }\n  meta?: {\n    authorName?: string\n    authorUrl?: string\n    relativePath?: string | null\n    absolutePath?: string\n  } & M\n  remote: {\n    companionUrl: string\n    url: string\n    body: {\n      fileId: string\n      url?: string\n    }\n    providerName?: string\n    provider?: string\n    requestClientId: string\n  }\n}\n"],"mappings":"","ignoreList":[]}
